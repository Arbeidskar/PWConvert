audio/mpeg:
  command: cp <source> <dest>
audio/x-wav:
  command: vlc -I dummy <source> :sout=#transcode{acodec=mpga,ab=192}:std{dst=<dest>,access=file} vlc://quit
  dest-ext: mp3
application/gzip:
  command: gzip -dk --stdout <source> > <dest>
  dest-ext: null
application/javascript:
  command: cp <source> <dest>
application/mp4:
  command: cp <source> <dest>
application/msword:
  command: python3 -m bin.office2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/oxps:
  # Convert xps to pdf/a. This requires installation of GhostPDL from source.
  command: gxps -sDEVICE=pdfwrite -dPDFA=2 -dNOPAUSE -sOutputFile=<dest> <source>
  dest-ext: pdf
application/postscript:
  command: ps2pdf -dPDFA=2 <source> <dest>
  dest-ext: pdf
application/rtf:
  command: python3 -m bin.office2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/pdf:
  command: bin/pdf2pdfa.sh <source> <dest>
  dest-ext: pdf
application/vnd.ms-excel:
  # Excel files are accepted by Library of Congress
  command: soffice --headless  --convert-to 'pdf:calc_pdf_Export:{"SinglePageSheets":{"type":"boolean","value":"true"}}' --outdir <temp-parent> <source> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
  keep-original: true
application/vnd.ms-excel.sheet.macroEnabled.12:
  command: soffice --headless --convert-to 'pdf:calc_pdf_Export:{"SinglePageSheets":{"type":"boolean","value":"true"}}' --outdir <temp-parent> <source> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
  keep-original: true
application/vnd.ms-outlook:
  # Library of Congress has no preferred format, but accepts both .msg and .pst
  command: cp <source> <dest>
application/vnd.ms-powerpoint:
  command: python3 -m bin.office2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/vnd.ms-project:
  # Can be manually converted with MS Project or ProjectLibre (freeware)
  dest-ext: pdf
  keep-original: true
application/vnd.ms-visio.drawing.main+xml:
  command: soffice --headless --convert-to pdf --outdir <temp-parent> <source> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/vnd.ms-word.document.macroEnabled.12:
  command: python3 -m bin.office2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/vnd.oasis.opendocument.spreadsheet:
  command: soffice --headless --convert-to 'pdf:calc_pdf_Export:{"SinglePageSheets":{"type":"boolean","value":"true"}}' --outdir <temp-parent> <source> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
  keep-original: true
application/vnd.oasis.opendocument.text:
  command: python3 -m bin.unoconv2x <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/vnd.openxmlformats-officedocument.presentationml.presentation:
  command: python3 -m bin.unoconv2x <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
  # Excel files are accepted by Library of Congress
  command: cp <source> <dest>
application/vnd.openxmlformats-officedocument.wordprocessingml.document:
  command: python3 -m bin.office2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/vnd.openxmlformats-officedocument.wordprocessingml.template:
  command: python3 -m bin.office2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/vnd.rar:
  command: mkdir <unpack-path> && unrar x <source> <unpack-path>
application/vnd.wordperfect:
  command: python3 -m bin.unoconv2x <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
application/x-7z-compressed:
  command: 7za x <source> -o<unpack-path>
application/xml:
  command: cp <source> <dest>
application/xhtml+xml:
  comment: Command tested and produces pdf/a
  command: python3 -m bin.xhtml2pdf <source> <dest>
  dest-ext: pdf
application/zip:
  command: unzip <source> -d <unpack-path> -x __MACOSX/* .DS_Store Thumbs.db
image/bmp:
  command: convert <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
image/gif:
  command: cp <source> <dest>
image/jpeg:
  command: cp <source> <dest>
image/png:
  command: cp <source> <dest>
image/tiff:
  command: tiff2pdf -o <temp> <source>  && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
image/vnd.dwg:
  command: python3 -m bin.dwg2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
  keep-original: true
  timeout: 240
image/webp:
  command: cp <source> <dest>
message/rfc822:
  command: cp <source> <dest>
multipart/related:
  # Web archive format supported in Chrome
  command: cp <source> <dest>
text/css:
  command: python3 -m bin.text2utf8 <source> <dest>
text/csv:
  command: python3 -m bin.text2utf8 <source> <dest>
text/html:
  command: python3 -m bin.html2pdf <source> <temp> && bin/pdf2pdfa.sh <temp> <dest>
  dest-ext: pdf
text/markdown:
  command: python3 -m bin.text2utf8 <source> <dest>
  dest-ext: md
text/plain:
  command: python3 -m bin.text2utf8 <source> <dest>
text/vnd.sosi:
  command: cp <source> <dest>
text/xml:
  command: cp <source> <dest>
video/quicktime:
  command: vlc -I dummy <source> --sout=#std{access=file,mux=mp4,dst=<dest>} vlc://quit
  dest-ext: mp4
video/x-ms-wmv:
  command: vlc -I dummy <source> --sout=#transcode{vcodec=h264,vb=1024,acodec=mp4a,ab=192,channels=2,deinterlace}:standard{access=file,mux=ts,dst=<dest>} vlc://quit
  dest-ext: mp4
